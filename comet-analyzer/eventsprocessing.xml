<?xml version="1.0" encoding="UTF-8"?>

<!-- deployer@robot-server: b927dace-e6b5-4ca7-9c22-b1d4e3ba4b9f registration@market-server: 
	0dd4f4f5-72ce-40fe-996f-f80700c322f0 registration@risk-server: 6264c494-b240-43dc-892f-10c7dfbea378 
	request@order-router: feb0741f-4b42-4497-9c46-6205a97fe400 (Check computation 
	name here) -->

<config>
	<global>
		<!-- <start>1</start> -->
		<!-- <end>1000</end> -->
		<protocolversion>0.1</protocolversion>
		<mongo-host>peru.local</mongo-host>
		<mongo-port>27017</mongo-port>
		<mongo-db>coast</mongo-db>
		<mongo-collection>events</mongo-collection>
		<last-component>trader</last-component>
		<correlation-field>mq-time</correlation-field>
	</global>

	<assertions>
		<sequence
			description="Trading Computation is properly deployed and up &amp; running.">
			<event description="Trader provides a CURL for notifications.">
				<source-island>trader</source-island>
				<!-- <source-islet>dispatcher</source-islet> -->
				<type>curl-new</type>
				<place>inter</place>
				<curl-id>$capture:trader-curl</curl-id>
			</event>
			<event description="Trader includes its notification CURL.">
				<source-island>trader</source-island>
				<!-- <source-islet>dispatcher</source-islet> -->
				<type>curl-transfer</type>
				<place>inter</place>
				<curl-id>$read:trader-curl</curl-id>
			</event>


			<event description="Trader ships a trading computation to the robot-server.">
				<source-island>trader</source-island>
				<!-- <source-islet>dispatcher</source-islet> -->
				<type>curl-send</type>
				<place>inter</place>
				<curl-id>b927dace-e6b5-4ca7-9c22-b1d4e3ba4b9f</curl-id>
			</event>
			<event description="robot-server receives the trading computation.">
				<source-island>robot-server</source-island>
				<!-- <source-islet>deployer</source-islet> -->
				<type>curl-receive</type>
				<curl-id>b927dace-e6b5-4ca7-9c22-b1d4e3ba4b9f</curl-id>
			</event>


			<event
				description="Trading Computation @ robot-server creates a new CURL to be sent to Risk and Market Data servers.">
				<source-island>robot-server</source-island>
				<source-islet>trader</source-islet>
				<type>curl-new</type>
				<place>inter</place>
				<curl-id>$capture:trader-updates</curl-id>
			</event>
			<event
				description="Trading Computation @ robot-server transfers the new CURL (to Market Data Server).">
				<source-island>robot-server</source-island>
				<source-islet>trader</source-islet>
				<type>curl-transfer</type>
				<place>inter</place>
				<curl-id>$read:trader-updates</curl-id>
			</event>
			<event
				description="Trading Computation @ robot-server sends the new CURL to the Market Data server.">
				<source-island>robot-server</source-island>
				<source-islet>trader</source-islet>
				<type>curl-send</type>
				<place>inter</place>
				<curl-id>0dd4f4f5-72ce-40fe-996f-f80700c322f0</curl-id>
			</event>

			<event
				description="Trading Computation @ robot-server transfers the new CURL (to Risk Server)">
				<source-island>robot-server</source-island>
				<source-islet>trader</source-islet>
				<type>curl-transfer</type>
				<place>inter</place>
				<curl-id>$read:trader-updates</curl-id>
			</event>
			<event
				description="Trading Computation @ robot-server sends the new CURL to the Risk Management server.">
				<source-island>robot-server</source-island>
				<source-islet>trader</source-islet>
				<type>curl-send</type>
				<place>inter</place>
				<curl-id>6264c494-b240-43dc-892f-10c7dfbea378</curl-id>
			</event>

			<event description="Market Data server receives the new CURL.">
				<source-island>market-server</source-island>
				<source-islet>server.registration</source-islet>
				<type>curl-receive</type>
				<curl-id>0dd4f4f5-72ce-40fe-996f-f80700c322f0</curl-id>
			</event>

			<event description="Risk Management Server receives the new CURL.">
				<source-island>risk-server</source-island>
				<source-islet>server.registration</source-islet>
				<type>curl-receive</type>
				<curl-id>6264c494-b240-43dc-892f-10c7dfbea378</curl-id>
			</event>
			<!-- <event description="Risk Server sends update."> -->
			<!-- <source-island>risk</source-island> -->
			<!-- <source-islet>update</source-islet> -->
			<!-- <type>curl-send</type> -->
			<!-- <place>inter</place> -->
			<!-- <curl-id>$last</curl-id> -->
			<!-- </event> -->
			<!-- <event -->
			<!-- description="Trading Computation @ robot-server receives update from 
				Risk Server."> -->
			<!-- <source-island>robot-server</source-island> -->
			<!-- <source-islet>trader</source-islet> -->
			<!-- <type>curl-receive</type> -->
			<!-- <place>inter</place> -->
			<!-- <curl-id>$last</curl-id> -->
			<!-- </event> -->
			<event description="Market Data Server sends update.">
				<source-island>market-server</source-island>
				<!-- <source-islet>update</source-islet> -->
				<type>curl-send</type>
				<place>inter</place>
				<curl-id>$read:trader-updates</curl-id>
			</event>
			<event
				description="Trading Computation @ robot-server receives update from Market Data Server.">
				<source-island>robot-server</source-island>
				<source-islet>trader</source-islet>
				<type>curl-receive</type>
				<!-- <place>inter</place> -->
				<curl-id>$read:trader-updates</curl-id>
			</event>
			<event
				description="Trading Computation @ robot-server creates a CURL for an order">
				<source-island>robot-server</source-island>
<!-- 				<source-islet>trader</source-islet> -->
				<type>curl-new</type>
				<place>inter</place>
				<curl-id>$capture:new-order</curl-id>
			</event>
			<event
				description="Trading Computation @ robot-server transfers the CURL to the Order Router.">
				<source-island>robot-server</source-island>
				<source-islet>trader</source-islet>
				<type>curl-transfer</type>
				<place>inter</place>
				<curl-id>$read:new-order</curl-id>
			</event>
			<event description="Order Router receives the order.">
				<source-island>order-router</source-island>
				<!-- <source-islet>order-manager</source-islet> -->
				<type>curl-receive</type>
				<!-- <place>inter</place> -->
				<curl-id>feb0741f-4b42-4497-9c46-6205a97fe400</curl-id>
			</event>
			<event
				description="Order Router sends an execution report for the placed order to the Trading Computation @ robot-server.">
				<source-island>order-router</source-island>
				<!-- <source-islet>order-manager</source-islet> -->
				<type>curl-send</type>
				<place>inter</place>
				<curl-id>$read:new-order</curl-id>
			</event>
			<event
				description="Trading Computation @ robot-server receives the execution report sent by the Order Router.">
				<source-island>robot-server</source-island>
<!-- 				<source-islet>trader</source-islet> -->
				<type>curl-receive</type>
				<!-- <place>inter</place> -->
				<curl-id>$read:new-order</curl-id>
			</event>
		</sequence>
	</assertions>

</config>